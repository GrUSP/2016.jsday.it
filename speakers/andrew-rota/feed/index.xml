<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Andrew Rota &#8211; jsDay 2016</title>
	<atom:link href="/speakers/andrew-rota/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>The international Javascript Conference</description>
	<lastBuildDate>Wed, 11 May 2016 15:18:08 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.7.2</generator>
	<item>
		<title>Effectively Monitoring Client-Side Web Performance</title>
		<link>/talk/effectively-monitoring-client-side-web-performance/</link>
		<pubDate>Wed, 06 Apr 2016 13:55:20 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		
		<guid isPermaLink="false">/?post_type=talk&#038;p=497</guid>
		<description><![CDATA[The performance of our client-side web applications directly impacts the experience of our users, yet browser performance can be one of the most difficult metrics to reliably track. The best way to improve performance is to collect and monitor a wide range of these metrics over time. There are countless tools and techniques available to [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><span data-sheets-value="{&quot;1&quot;:2,&quot;2&quot;:&quot;The performance of our client-side web applications directly impacts the experience of our users, yet browser performance can be one of the most difficult metrics to reliably track. The best way to improve performance is to collect and monitor a wide range of these metrics over time. There are countless tools and techniques available to developers to test the client-side performance of their code during the development process. But many of these are manual checks that lack the level of automation and reproducibility we\u2019ve come to expect in software metrics. Performance data often isn\u2019t monitored over time, resulting in performance regressions of one of the most critical layers of our applications: the browser. This talk will examine different approaches for monitoring the client-side performance of a web application. It will consider the trade-offs of real user monitoring vs. synthetic performance tests, and highlight the best methods for collecting, tracking, and analyzing these numbers over time. Most importantly, it will provide you with the tools and resources you need to start establish actionable benchmarks to improve the user experience of your web application. Reducing guesswork, and building reliable, automated methods for monitoring client-side performance is the first step towards creating a better, faster user experience.&quot;}" data-sheets-userformat="{&quot;2&quot;:9089,&quot;3&quot;:[null,0],&quot;10&quot;:0,&quot;11&quot;:4,&quot;12&quot;:0,&quot;16&quot;:8}">The performance of our client-side web applications directly impacts the experience of our users, yet browser performance can be one of the most difficult metrics to reliably track. The best way to improve performance is to collect and monitor a wide range of these metrics over time. There are countless tools and techniques available to developers to test the client-side performance of their code during the development process. But many of these are manual checks that lack the level of automation and reproducibility we’ve come to expect in software metrics. Performance data often isn’t monitored over time, resulting in performance regressions of one of the most critical layers of our applications: the browser. This talk will examine different approaches for monitoring the client-side performance of a web application. It will consider the trade-offs of real user monitoring vs. synthetic performance tests, and highlight the best methods for collecting, tracking, and analyzing these numbers over time. Most importantly, it will provide you with the tools and resources you need to start establish actionable benchmarks to improve the user experience of your web application. Reducing guesswork, and building reliable, automated methods for monitoring client-side performance is the first step towards creating a better, faster user experience.</span></p>
]]></content:encoded>
			</item>
	</channel>
</rss>

<!-- Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/

 Served from: 2016.jsday.it @ 2017-02-13 21:20:38 by W3 Total Cache -->